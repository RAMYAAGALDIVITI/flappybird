package flappyBirrd;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Random;

import  javax.swing.*;
//for jframe and timer

public class FlappyBird implements ActionListener,MouseListener, KeyListener{

	public static FlappyBird fb;
	
	public final  int h=700,w=700;
	
	public Renderer renderer;
	
	public Rectangle bird;
	
	public int  ticks,ymotion,score;
	
	public boolean gameOver, started;
	
	public  ArrayList<Rectangle> columns;
	
	public Random rand;
	
	public FlappyBird(){
		
		JFrame jframe=new JFrame();
		
		Timer timer=new Timer(20, this);
		
		renderer=new Renderer();
		
		rand=new Random();
		
		jframe.add(renderer);
		jframe.setTitle("TIMON's jump");
		jframe.setSize(h,w);
		jframe.addMouseListener(this);
		jframe.addKeyListener(this);
		jframe.setVisible(true);
		jframe.setResizable(false);
		jframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		bird=new Rectangle(w/2-10,h/2-10,20,20);		
		columns=new ArrayList<Rectangle>();
		
		addColumn(true);
		addColumn(true);
		addColumn(true); 
		addColumn(true);
		
		timer.start();
		
	}
	
	public void addColumn(boolean start){
		
		int space=300;
		int width=100;
		int height= 50 + rand.nextInt(300);
		
		if(start){
			columns.add(new Rectangle( w+ width+ columns.size()*300, h-height-120,width,height));
			columns.add(new Rectangle(w+width+(columns.size()-1)*300, 0,width,h-height-space));
		}
		
		else{
			columns.add(new Rectangle(columns.get(columns.size()-1).x+600, h-height-120,width,height));
			columns.add(new Rectangle(columns.get(columns.size()-1).x , 0,width,h-height-space));
		}
	
	}
	
	public void paintColumn(Graphics g,Rectangle column){
		
		g.setColor(Color.green.darker());
		g.fillRect(column.x,column.y,column.width,column.height);
		
	}
	
	 public void jump(){
		
		 if(gameOver){
	
			 	bird=new Rectangle(w/2-10,h/2-10,20,20);	
				columns.clear();
				ymotion=0;
				score=0;
				
				addColumn(true);
				addColumn(true);
				addColumn(true);
				addColumn(true);
				
				gameOver=false;
		 }
		 if(!started){
			 
			 started=true;
		 }
		 else if(!gameOver){
			 
			 if(ymotion>0){
			
				 ymotion=0;
			 }

			 ymotion-=10;
		 }
	 }
	 
	@Override
	public void actionPerformed(ActionEvent e){
		
		int speed=5;
		ticks++;
		
		if(started){
		
			for(int i=0;i<columns.size();i++){
				Rectangle  column=columns.get(i);
				column.x -= speed;
			}
		
			if(ticks%2==0 && ymotion<15){
			
				ymotion+=2;
			}
		
			for(int i=0;i<columns.size();i++){
				Rectangle  column=columns.get(i);
				
				if(column.x + column.width< 0){
				
					columns.remove(column);
					if(column.y==0){
						addColumn(false);}
				}
			
			}
		
		
		
			bird.y+=ymotion;
		
			for(Rectangle column : columns){
			
				if(column.y==0 && bird.x + bird.width/2 > column.x+column.width/2-speed && bird.x+bird.width/2 < column.x+column.width/2 + speed ){
					score++;
				}
			
				if(column.intersects(bird)){
					gameOver=true;
				
					if(bird.x <= column.x){
						bird.x=column.x - bird.width;
					}
				
					else{
						if(column.y!=0){
							bird.y=column.y-bird.height;
						}
						
					else if(bird.y < column.height){
						
						bird.y=column.height;
					}
				}
					
			}
		}
		
		if(bird.y > h-120 || bird.y < 0){
			
			gameOver=true;
			}
		
		if(bird.y+ymotion>=h-120){
			
			bird.y = h -120 -bird.height;
			
			gameOver=true;
			}
		}
		renderer.repaint();
	}
	
	
	public void repaint(Graphics g) {
 	
		g.setColor(Color.CYAN);
		g.fillRect(0, 0, w, h);
		
		g.setColor(Color.orange);
		g.fillRect(0,h-120, w, 120);
		
		g.setColor(Color.green);
		g.fillRect(0,h-120, w, 20);
		
		g.setColor(Color.MAGENTA);
		g.fillRect(bird.x,bird.y,bird.width,bird.height);
		
		for(Rectangle column : columns){
			paintColumn(g,column);
		}
		
		g.setColor(Color.black);
		g.setFont(new Font("Arial",1,100));
		
		if(!started){
			
			g.drawString("Click to start",75, h/2+50);
		}
		
		if(gameOver){
			
			g.drawString("Game over!",40, h/2+50);
		}
		
		if(!gameOver && started){
			g.drawString(String.valueOf(score),w/2-25,100);
		}
	}
	
	
	public static void main(String[] args) {
	
		fb=new FlappyBird();

	}

	@Override
	public void mouseClicked(MouseEvent e) {
		jump();
	}

	@Override
	public void mousePressed(MouseEvent e) {
			
	}

	@Override
	public void mouseReleased(MouseEvent e) {
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		
	}

	@Override
	public void keyTyped(KeyEvent e) {
		
		
	}

	@Override
	public void keyPressed(KeyEvent e) {
		
		
	}

	@Override
	public void keyReleased(KeyEvent e) {
		if(e.getKeyCode()==KeyEvent.VK_SPACE){
			jump();
		}
	}
	
}
